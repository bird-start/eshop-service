<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大连接数-->
        <property name="maxTotal" value="300"/>
        <!--最大空闲数-->
        <property name="maxIdle" value="5"/>
        <!--最小空闲数-->
        <property name="minIdle" value="0"/>
        <!--达到最大连接数是否阻塞-->
        <property name="blockWhenExhausted" value="true"/>
        <!--最大连接数后最长阻塞时间-->
        <property name="maxWaitMillis" value="15000"/>
        <!--连接空闲的最小时间，可能被移除-->
        <property name="minEvictableIdleTimeMillis" value="60000"/>
        <!--连接空闲的最小时间，多余最小空闲连接的将被移除-->
        <property name="softMinEvictableIdleTimeMillis" value="30000"/>
        <!--对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3.-->
        <property name="numTestsPerEvictionRun" value="3"/>
        <!--空闲连接的检测周期-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--当连接给调用者使用时，是否检测空间超时-->
        <property name="testWhileIdle" value="false"/>
        <!--当连接给调用者使用时，是否检测其有效性-->
        <property name="testOnBorrow" value="false"/>
        <!--归还连接时，是否检测其有效性-->
        <property name="testOnReturn" value="false"/>
    </bean>


    <bean id="connectionFactory"    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
             p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
             p:pool-config-ref="redisPoolConfig" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
         <!--  如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！-->   <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean   class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" />

</beans>